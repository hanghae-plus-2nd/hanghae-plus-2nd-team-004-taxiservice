package hanghae.four.taxiservice.unit.infrastructures.pay

import hanghae.four.taxiservice.domain.pay.Payment
import hanghae.four.taxiservice.domain.pay.PaymentStore
import java.util.concurrent.atomic.AtomicLong

class FakePaymentStore : PaymentStore {
    private val autoGeneratedId: AtomicLong = AtomicLong(0)
    private val payments: ArrayList<Payment> = ArrayList()

    override fun store(payment: Payment): Payment {
        if (payment.id == null) {
            val savePayment = Payment(
                id = autoGeneratedId.incrementAndGet(),
                clientId = payment.clientId,
                callId = payment.callId,
                type = payment.type
            )

            payments.add(savePayment)
            return savePayment
        }

        payments.removeIf { p -> p.id == payment.id }
        payments.add(payment)
        return payment
    }
}
