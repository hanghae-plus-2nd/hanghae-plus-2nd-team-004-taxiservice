package hanghae.four.taxiservice.unit.infrastructures.driver

import hanghae.four.taxiservice.domain.taxi.call.driver.Driver
import hanghae.four.taxiservice.domain.taxi.call.driver.DriverReader
import hanghae.four.taxiservice.domain.taxi.call.driver.DriverStore
import java.util.concurrent.atomic.AtomicLong

class FakeDriverRepository : DriverReader, DriverStore {
    private val autoGeneratedId: AtomicLong = AtomicLong(0)
    private val drivers: ArrayList<Driver> = ArrayList()

    override fun getDriver(driverId: Long): Driver {
        val driver = Driver(1L, "기사1", "12345678901234567890", "010-1234-5678")
        if (driver.id != driverId) {
            throw IllegalArgumentException()
        }

        return driver
    }

    override fun register(driver: Driver): Driver {
        if (driver.id == null) {
            val saveDriver = Driver(
                id = autoGeneratedId.incrementAndGet(),
                name = driver.name,
                licenseNumber = driver.licenseNumber,
                phoneNumber = driver.phoneNumber
            )

            drivers.add(saveDriver)
            return saveDriver
        }

        drivers.removeIf { t -> t.id == driver.id }
        drivers.add(driver)
        return driver
    }
}
