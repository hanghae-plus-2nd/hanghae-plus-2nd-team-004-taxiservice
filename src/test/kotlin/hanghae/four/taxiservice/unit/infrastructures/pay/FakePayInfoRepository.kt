package hanghae.four.taxiservice.unit.infrastructures.pay

import hanghae.four.taxiservice.domain.pay.payinfo.PayInfo
import hanghae.four.taxiservice.domain.pay.payinfo.PayInfoReader
import hanghae.four.taxiservice.infrastructure.util.fail
import java.util.concurrent.atomic.AtomicLong

class FakePayInfoRepository : PayInfoReader {
    private val autoGeneratedId: AtomicLong = AtomicLong(0)
    private val payments: ArrayList<PayInfo> = ArrayList()

    fun store(payment: PayInfo) {
        if (payment.id == null) {
            val savePayment = PayInfo(
                id = autoGeneratedId.incrementAndGet(),
                clientId = payment.clientId,
                type = payment.type
            )

            payments.add(savePayment)
            return
        }

        payments.removeIf { p -> p.id == payment.id }
        payments.add(payment)
    }

    override fun getPayInfo(paymentId: Long, type: PayInfo.Type): PayInfo {
        return payments.firstOrNull { p -> p.id == paymentId && p.type == type } ?: fail()
    }
}
